Terminals unused in grammar

   KW_FOR
   KW_APPEND
   KW_CONCAT


Grammar

    0 $accept: input $end

    1 input: expi
    2      | input expi
    3      | expb
    4      | input expb
    5      | list
    6      | input list
    7      | OP_OP KW_EXIT OP_CP

    8 expi: OP_OP OP_PLUS expi expi OP_CP
    9     | OP_OP OP_MINUS expi expi OP_CP
   10     | OP_OP OP_MULT expi expi OP_CP
   11     | OP_OP OP_DIV expi expi OP_CP
   12     | OP_OP OP_DBLMULT expi expi OP_CP
   13     | OP_OP KW_SET IDENTIFIER NUMBER OP_CP
   14     | OP_OP KW_IF expb expi expi OP_CP
   15     | OP_OP KW_IF expb expi OP_CP
   16     | NUMBER
   17     | IDENTIFIER

   18 expb: OP_OP KW_AND expb expb OP_CP
   19     | OP_OP KW_OR expb expb OP_CP
   20     | OP_OP KW_NOT expb OP_CP
   21     | KW_TRUE
   22     | KW_FALSE
   23     | OP_OP KW_EQUAL expi expi OP_CP
   24     | OP_OP KW_LESS expi expi OP_CP

   25 list: OP_OP KW_LIST list_values OP_CP
   26     | OP_OP KW_LIST OP_CP
   27     | OP_OP KW_LIST KW_NIL OP_CP

   28 list_values: NUMBER
   29            | list_values NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
OP_OP (258) 7 8 9 10 11 12 13 14 15 18 19 20 23 24 25 26 27
OP_CP (259) 7 8 9 10 11 12 13 14 15 18 19 20 23 24 25 26 27
OP_PLUS (260) 8
OP_MINUS (261) 9
OP_MULT (262) 10
OP_DIV (263) 11
OP_DBLMULT (264) 12
KW_AND (265) 18
KW_OR (266) 19
KW_NOT (267) 20
KW_EQUAL (268) 23
KW_LESS (269) 24
KW_NIL (270) 27
KW_TRUE (271) 21
KW_FALSE (272) 22
KW_SET (273) 13
KW_FOR (274)
KW_IF (275) 14 15
KW_EXIT (276) 7
KW_LIST (277) 25 26 27
KW_APPEND (278)
KW_CONCAT (279)
IDENTIFIER (280) 13 17
NUMBER (281) 13 16 28 29


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
input (28)
    on left: 1 2 3 4 5 6 7, on right: 0 2 4 6
expi (29)
    on left: 8 9 10 11 12 13 14 15 16 17, on right: 1 2 8 9 10 11 12
    14 15 23 24
expb (30)
    on left: 18 19 20 21 22 23 24, on right: 3 4 14 15 18 19 20
list (31)
    on left: 25 26 27, on right: 5 6
list_values (32)
    on left: 28 29, on right: 25 29


State 0

    0 $accept: . input $end

    OP_OP       shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    input  go to state 6
    expi   go to state 7
    expb   go to state 8
    list   go to state 9


State 1

    7 input: OP_OP . KW_EXIT OP_CP
    8 expi: OP_OP . OP_PLUS expi expi OP_CP
    9     | OP_OP . OP_MINUS expi expi OP_CP
   10     | OP_OP . OP_MULT expi expi OP_CP
   11     | OP_OP . OP_DIV expi expi OP_CP
   12     | OP_OP . OP_DBLMULT expi expi OP_CP
   13     | OP_OP . KW_SET IDENTIFIER NUMBER OP_CP
   14     | OP_OP . KW_IF expb expi expi OP_CP
   15     | OP_OP . KW_IF expb expi OP_CP
   18 expb: OP_OP . KW_AND expb expb OP_CP
   19     | OP_OP . KW_OR expb expb OP_CP
   20     | OP_OP . KW_NOT expb OP_CP
   23     | OP_OP . KW_EQUAL expi expi OP_CP
   24     | OP_OP . KW_LESS expi expi OP_CP
   25 list: OP_OP . KW_LIST list_values OP_CP
   26     | OP_OP . KW_LIST OP_CP
   27     | OP_OP . KW_LIST KW_NIL OP_CP

    OP_PLUS     shift, and go to state 10
    OP_MINUS    shift, and go to state 11
    OP_MULT     shift, and go to state 12
    OP_DIV      shift, and go to state 13
    OP_DBLMULT  shift, and go to state 14
    KW_AND      shift, and go to state 15
    KW_OR       shift, and go to state 16
    KW_NOT      shift, and go to state 17
    KW_EQUAL    shift, and go to state 18
    KW_LESS     shift, and go to state 19
    KW_SET      shift, and go to state 20
    KW_IF       shift, and go to state 21
    KW_EXIT     shift, and go to state 22
    KW_LIST     shift, and go to state 23


State 2

   21 expb: KW_TRUE .

    $default  reduce using rule 21 (expb)


State 3

   22 expb: KW_FALSE .

    $default  reduce using rule 22 (expb)


State 4

   17 expi: IDENTIFIER .

    $default  reduce using rule 17 (expi)


State 5

   16 expi: NUMBER .

    $default  reduce using rule 16 (expi)


State 6

    0 $accept: input . $end
    2 input: input . expi
    4      | input . expb
    6      | input . list

    $end        shift, and go to state 24
    OP_OP       shift, and go to state 25
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 26
    expb  go to state 27
    list  go to state 28


State 7

    1 input: expi .

    $default  reduce using rule 1 (input)


State 8

    3 input: expb .

    $default  reduce using rule 3 (input)


State 9

    5 input: list .

    $default  reduce using rule 5 (input)


State 10

    8 expi: OP_OP OP_PLUS . expi expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 30


State 11

    9 expi: OP_OP OP_MINUS . expi expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 31


State 12

   10 expi: OP_OP OP_MULT . expi expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 32


State 13

   11 expi: OP_OP OP_DIV . expi expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 33


State 14

   12 expi: OP_OP OP_DBLMULT . expi expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 34


State 15

   18 expb: OP_OP KW_AND . expb expb OP_CP

    OP_OP     shift, and go to state 35
    KW_TRUE   shift, and go to state 2
    KW_FALSE  shift, and go to state 3

    expb  go to state 36


State 16

   19 expb: OP_OP KW_OR . expb expb OP_CP

    OP_OP     shift, and go to state 35
    KW_TRUE   shift, and go to state 2
    KW_FALSE  shift, and go to state 3

    expb  go to state 37


State 17

   20 expb: OP_OP KW_NOT . expb OP_CP

    OP_OP     shift, and go to state 35
    KW_TRUE   shift, and go to state 2
    KW_FALSE  shift, and go to state 3

    expb  go to state 38


State 18

   23 expb: OP_OP KW_EQUAL . expi expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 39


State 19

   24 expb: OP_OP KW_LESS . expi expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 40


State 20

   13 expi: OP_OP KW_SET . IDENTIFIER NUMBER OP_CP

    IDENTIFIER  shift, and go to state 41


State 21

   14 expi: OP_OP KW_IF . expb expi expi OP_CP
   15     | OP_OP KW_IF . expb expi OP_CP

    OP_OP     shift, and go to state 35
    KW_TRUE   shift, and go to state 2
    KW_FALSE  shift, and go to state 3

    expb  go to state 42


State 22

    7 input: OP_OP KW_EXIT . OP_CP

    OP_CP  shift, and go to state 43


State 23

   25 list: OP_OP KW_LIST . list_values OP_CP
   26     | OP_OP KW_LIST . OP_CP
   27     | OP_OP KW_LIST . KW_NIL OP_CP

    OP_CP   shift, and go to state 44
    KW_NIL  shift, and go to state 45
    NUMBER  shift, and go to state 46

    list_values  go to state 47


State 24

    0 $accept: input $end .

    $default  accept


State 25

    8 expi: OP_OP . OP_PLUS expi expi OP_CP
    9     | OP_OP . OP_MINUS expi expi OP_CP
   10     | OP_OP . OP_MULT expi expi OP_CP
   11     | OP_OP . OP_DIV expi expi OP_CP
   12     | OP_OP . OP_DBLMULT expi expi OP_CP
   13     | OP_OP . KW_SET IDENTIFIER NUMBER OP_CP
   14     | OP_OP . KW_IF expb expi expi OP_CP
   15     | OP_OP . KW_IF expb expi OP_CP
   18 expb: OP_OP . KW_AND expb expb OP_CP
   19     | OP_OP . KW_OR expb expb OP_CP
   20     | OP_OP . KW_NOT expb OP_CP
   23     | OP_OP . KW_EQUAL expi expi OP_CP
   24     | OP_OP . KW_LESS expi expi OP_CP
   25 list: OP_OP . KW_LIST list_values OP_CP
   26     | OP_OP . KW_LIST OP_CP
   27     | OP_OP . KW_LIST KW_NIL OP_CP

    OP_PLUS     shift, and go to state 10
    OP_MINUS    shift, and go to state 11
    OP_MULT     shift, and go to state 12
    OP_DIV      shift, and go to state 13
    OP_DBLMULT  shift, and go to state 14
    KW_AND      shift, and go to state 15
    KW_OR       shift, and go to state 16
    KW_NOT      shift, and go to state 17
    KW_EQUAL    shift, and go to state 18
    KW_LESS     shift, and go to state 19
    KW_SET      shift, and go to state 20
    KW_IF       shift, and go to state 21
    KW_LIST     shift, and go to state 23


State 26

    2 input: input expi .

    $default  reduce using rule 2 (input)


State 27

    4 input: input expb .

    $default  reduce using rule 4 (input)


State 28

    6 input: input list .

    $default  reduce using rule 6 (input)


State 29

    8 expi: OP_OP . OP_PLUS expi expi OP_CP
    9     | OP_OP . OP_MINUS expi expi OP_CP
   10     | OP_OP . OP_MULT expi expi OP_CP
   11     | OP_OP . OP_DIV expi expi OP_CP
   12     | OP_OP . OP_DBLMULT expi expi OP_CP
   13     | OP_OP . KW_SET IDENTIFIER NUMBER OP_CP
   14     | OP_OP . KW_IF expb expi expi OP_CP
   15     | OP_OP . KW_IF expb expi OP_CP

    OP_PLUS     shift, and go to state 10
    OP_MINUS    shift, and go to state 11
    OP_MULT     shift, and go to state 12
    OP_DIV      shift, and go to state 13
    OP_DBLMULT  shift, and go to state 14
    KW_SET      shift, and go to state 20
    KW_IF       shift, and go to state 21


State 30

    8 expi: OP_OP OP_PLUS expi . expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 48


State 31

    9 expi: OP_OP OP_MINUS expi . expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 49


State 32

   10 expi: OP_OP OP_MULT expi . expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 50


State 33

   11 expi: OP_OP OP_DIV expi . expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 51


State 34

   12 expi: OP_OP OP_DBLMULT expi . expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 52


State 35

   18 expb: OP_OP . KW_AND expb expb OP_CP
   19     | OP_OP . KW_OR expb expb OP_CP
   20     | OP_OP . KW_NOT expb OP_CP
   23     | OP_OP . KW_EQUAL expi expi OP_CP
   24     | OP_OP . KW_LESS expi expi OP_CP

    KW_AND    shift, and go to state 15
    KW_OR     shift, and go to state 16
    KW_NOT    shift, and go to state 17
    KW_EQUAL  shift, and go to state 18
    KW_LESS   shift, and go to state 19


State 36

   18 expb: OP_OP KW_AND expb . expb OP_CP

    OP_OP     shift, and go to state 35
    KW_TRUE   shift, and go to state 2
    KW_FALSE  shift, and go to state 3

    expb  go to state 53


State 37

   19 expb: OP_OP KW_OR expb . expb OP_CP

    OP_OP     shift, and go to state 35
    KW_TRUE   shift, and go to state 2
    KW_FALSE  shift, and go to state 3

    expb  go to state 54


State 38

   20 expb: OP_OP KW_NOT expb . OP_CP

    OP_CP  shift, and go to state 55


State 39

   23 expb: OP_OP KW_EQUAL expi . expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 56


State 40

   24 expb: OP_OP KW_LESS expi . expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 57


State 41

   13 expi: OP_OP KW_SET IDENTIFIER . NUMBER OP_CP

    NUMBER  shift, and go to state 58


State 42

   14 expi: OP_OP KW_IF expb . expi expi OP_CP
   15     | OP_OP KW_IF expb . expi OP_CP

    OP_OP       shift, and go to state 29
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 59


State 43

    7 input: OP_OP KW_EXIT OP_CP .

    $default  reduce using rule 7 (input)


State 44

   26 list: OP_OP KW_LIST OP_CP .

    $default  reduce using rule 26 (list)


State 45

   27 list: OP_OP KW_LIST KW_NIL . OP_CP

    OP_CP  shift, and go to state 60


State 46

   28 list_values: NUMBER .

    $default  reduce using rule 28 (list_values)


State 47

   25 list: OP_OP KW_LIST list_values . OP_CP
   29 list_values: list_values . NUMBER

    OP_CP   shift, and go to state 61
    NUMBER  shift, and go to state 62


State 48

    8 expi: OP_OP OP_PLUS expi expi . OP_CP

    OP_CP  shift, and go to state 63


State 49

    9 expi: OP_OP OP_MINUS expi expi . OP_CP

    OP_CP  shift, and go to state 64


State 50

   10 expi: OP_OP OP_MULT expi expi . OP_CP

    OP_CP  shift, and go to state 65


State 51

   11 expi: OP_OP OP_DIV expi expi . OP_CP

    OP_CP  shift, and go to state 66


State 52

   12 expi: OP_OP OP_DBLMULT expi expi . OP_CP

    OP_CP  shift, and go to state 67


State 53

   18 expb: OP_OP KW_AND expb expb . OP_CP

    OP_CP  shift, and go to state 68


State 54

   19 expb: OP_OP KW_OR expb expb . OP_CP

    OP_CP  shift, and go to state 69


State 55

   20 expb: OP_OP KW_NOT expb OP_CP .

    $default  reduce using rule 20 (expb)


State 56

   23 expb: OP_OP KW_EQUAL expi expi . OP_CP

    OP_CP  shift, and go to state 70


State 57

   24 expb: OP_OP KW_LESS expi expi . OP_CP

    OP_CP  shift, and go to state 71


State 58

   13 expi: OP_OP KW_SET IDENTIFIER NUMBER . OP_CP

    OP_CP  shift, and go to state 72


State 59

   14 expi: OP_OP KW_IF expb expi . expi OP_CP
   15     | OP_OP KW_IF expb expi . OP_CP

    OP_OP       shift, and go to state 29
    OP_CP       shift, and go to state 73
    IDENTIFIER  shift, and go to state 4
    NUMBER      shift, and go to state 5

    expi  go to state 74


State 60

   27 list: OP_OP KW_LIST KW_NIL OP_CP .

    $default  reduce using rule 27 (list)


State 61

   25 list: OP_OP KW_LIST list_values OP_CP .

    $default  reduce using rule 25 (list)


State 62

   29 list_values: list_values NUMBER .

    $default  reduce using rule 29 (list_values)


State 63

    8 expi: OP_OP OP_PLUS expi expi OP_CP .

    $default  reduce using rule 8 (expi)


State 64

    9 expi: OP_OP OP_MINUS expi expi OP_CP .

    $default  reduce using rule 9 (expi)


State 65

   10 expi: OP_OP OP_MULT expi expi OP_CP .

    $default  reduce using rule 10 (expi)


State 66

   11 expi: OP_OP OP_DIV expi expi OP_CP .

    $default  reduce using rule 11 (expi)


State 67

   12 expi: OP_OP OP_DBLMULT expi expi OP_CP .

    $default  reduce using rule 12 (expi)


State 68

   18 expb: OP_OP KW_AND expb expb OP_CP .

    $default  reduce using rule 18 (expb)


State 69

   19 expb: OP_OP KW_OR expb expb OP_CP .

    $default  reduce using rule 19 (expb)


State 70

   23 expb: OP_OP KW_EQUAL expi expi OP_CP .

    $default  reduce using rule 23 (expb)


State 71

   24 expb: OP_OP KW_LESS expi expi OP_CP .

    $default  reduce using rule 24 (expb)


State 72

   13 expi: OP_OP KW_SET IDENTIFIER NUMBER OP_CP .

    $default  reduce using rule 13 (expi)


State 73

   15 expi: OP_OP KW_IF expb expi OP_CP .

    $default  reduce using rule 15 (expi)


State 74

   14 expi: OP_OP KW_IF expb expi expi . OP_CP

    OP_CP  shift, and go to state 75


State 75

   14 expi: OP_OP KW_IF expb expi expi OP_CP .

    $default  reduce using rule 14 (expi)
